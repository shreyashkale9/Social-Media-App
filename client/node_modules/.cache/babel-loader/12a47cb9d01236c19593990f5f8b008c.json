{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n  return 'Reducer \"' + key + '\" returned undefined handling ' + actionName + '. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: _createStore.ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\n    if (typeof reducer(undefined, {\n      type: type\n    }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  var sanityError;\n\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}","map":{"version":3,"sources":["D:/Coding/Facebook-Clone/client/node_modules/redux/lib/combineReducers.js"],"names":["exports","__esModule","combineReducers","_createStore","require","_isPlainObject","_isPlainObject2","_interopRequireDefault","_warning","_warning2","obj","getUndefinedStateErrorMessage","key","action","actionType","type","actionName","toString","getUnexpectedStateShapeWarningMessage","inputState","reducers","reducerKeys","Object","keys","argumentName","ActionTypes","INIT","length","call","match","join","unexpectedKeys","filter","hasOwnProperty","assertReducerSanity","forEach","reducer","initialState","undefined","Error","Math","random","substring","split","finalReducers","i","finalReducerKeys","sanityError","e","combination","state","arguments","process","env","NODE_ENV","warningMessage","hasChanged","nextState","previousStateForKey","nextStateForKey","errorMessage"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Reducer \"' + key + '\" returned undefined handling ' + actionName + '. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}"]},"metadata":{},"sourceType":"script"}